{"version":3,"sources":["../../src/utils/encoding.js"],"names":["_","require","importPrivateKey","isHex","addressToBech32","module","exports","config","encodeAccount","acc","isEmpty","DEFAULT_ENCODING","NetEncodingEnum","BECH32","address","PREFIX_BECH32_ACCADDR","publicKey","PREFIX_BECH32_ACCPUB","importAccount","privateKey","keyPair","phrase"],"mappings":";;AAKA;;AALA,IAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;eAC6BA,OAAO,CAAC,UAAD,C;IAA5BC,gB,YAAAA,gB;;gBACUD,OAAO,CAAC,OAAD,C;IAAjBE,K,aAAAA,K;;gBACoBF,OAAO,CAAC,UAAD,C;IAA3BG,e,aAAAA,e;;AAIRC,MAAM,CAACC,OAAP,GAAiB,UAASC,MAAT,EAAiB;AAChC,WAASC,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,QAAIT,CAAC,CAACU,OAAF,CAAUD,GAAV,CAAJ,EAAoB;AAClB,aAAO,IAAP;AACD;;AAED,YAAQF,MAAM,CAACI,gBAAf;AACE,WAAKC,0BAAgBC,MAArB;AAA6B;AAC3B,cAAIV,KAAK,CAACM,GAAG,CAACK,OAAL,CAAT,EAAwB;AACtBL,YAAAA,GAAG,CAACK,OAAJ,GAAcV,eAAe,CAACG,MAAM,CAACQ,qBAAR,EAA+BN,GAAG,CAACK,OAAnC,CAA7B;AACD;;AAED,cAAIX,KAAK,CAACM,GAAG,CAACO,SAAL,CAAT,EAA0B;AACxBP,YAAAA,GAAG,CAACO,SAAJ,GAAgBZ,eAAe,CAACG,MAAM,CAACU,oBAAR,EAA8BR,GAAG,CAACO,SAAlC,CAA/B;AACD;;AACD;AACD;;AACD;AAAS,SACR;AAZH;;AAcA,WAAOP,GAAP;AACD;;AAED,WAASS,aAAT,CAAuBC,UAAvB,EAAmC;AACjC,QAAMC,OAAO,GAAGlB,gBAAgB,CAACiB,UAAD,CAAhC;AAEA,QAAI,CAACC,OAAL,EAAc,OAAO,IAAP;AAEd,WAAOZ,aAAa,CAAC;AACnBM,MAAAA,OAAO,EAAEM,OAAO,CAACN,OADE;AAEnBO,MAAAA,MAAM,EAAE,IAFW;AAGnBF,MAAAA,UAAU,EAAEC,OAAO,CAACD,UAHD;AAInBH,MAAAA,SAAS,EAAEI,OAAO,CAACJ;AAJA,KAAD,CAApB;AAMD;;AAED,SAAO;AACLE,IAAAA,aAAa,EAAbA,aADK;AAELV,IAAAA,aAAa,EAAbA;AAFK,GAAP;AAID,CAxCD","sourcesContent":["const _ = require('lodash');\nconst { importPrivateKey } = require('./common');\nconst { isHex } = require('./hex');\nconst { addressToBech32 } = require('./bech32');\n\nimport { NetEncodingEnum } from '../config/abstract';\n\nmodule.exports = function(config) {\n  function encodeAccount(acc) {\n    if (_.isEmpty(acc)) {\n      return null;\n    }\n\n    switch (config.DEFAULT_ENCODING) {\n      case NetEncodingEnum.BECH32: {\n        if (isHex(acc.address)) {\n          acc.address = addressToBech32(config.PREFIX_BECH32_ACCADDR, acc.address);\n        }\n\n        if (isHex(acc.publicKey)) {\n          acc.publicKey = addressToBech32(config.PREFIX_BECH32_ACCPUB, acc.publicKey);\n        }\n        break;\n      }\n      default: {\n      }\n    }\n    return acc;\n  }\n\n  function importAccount(privateKey) {\n    const keyPair = importPrivateKey(privateKey);\n\n    if (!keyPair) return null;\n\n    return encodeAccount({\n      address: keyPair.address,\n      phrase: null,\n      privateKey: keyPair.privateKey,\n      publicKey: keyPair.publicKey,\n    });\n  }\n\n  return {\n    importAccount,\n    encodeAccount,\n  };\n};\n"],"file":"encoding.js"}