{"version":3,"sources":["../../src/types/base.js"],"names":["require","TypeFactory","Types","StdTx","create","name","type","ArrayInterface","Struct","ArrayStruct","String","Coin","Input","Output","Fee","PubKeySecp256k1","ByteSlice","Signature","Interface","MsgForSign","module","exports"],"mappings":"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","sourcesContent":["const { TypeFactory, Types } = require('js-amino');\n\nconst StdTx = TypeFactory.create('StdTx', [\n  {\n    name: 'msg',\n    type: Types.ArrayInterface,\n  },\n  {\n    name: 'fee',\n    type: Types.Struct,\n  },\n  {\n    name: 'signatures',\n    type: Types.ArrayStruct,\n  },\n  {\n    name: 'memo',\n    type: Types.String,\n  },\n]);\n\nconst Coin = TypeFactory.create('coin', [\n  {\n    name: 'denom',\n    type: Types.String,\n  },\n  {\n    name: 'amount',\n    type: Types.String,\n  },\n]);\n\nconst Input = TypeFactory.create('input', [\n  {\n    name: 'address',\n    type: Types.String,\n  },\n  {\n    name: 'coins',\n    type: Types.ArrayStruct,\n  },\n]);\n\nconst Output = TypeFactory.create('output', [\n  {\n    name: 'address',\n    type: Types.String,\n  },\n  {\n    name: 'coins',\n    type: Types.ArrayStruct,\n  },\n]);\n\nconst Fee = TypeFactory.create('fee', [\n  {\n    name: 'amount',\n    type: Types.ArrayStruct,\n  },\n  {\n    name: 'gas',\n    type: Types.String,\n  },\n]);\n\nconst PubKeySecp256k1 = TypeFactory.create(\n  'PubKeySecp256k1',\n  [\n    {\n      name: 's',\n      type: Types.ByteSlice,\n    },\n  ],\n  Types.ByteSlice\n);\n\nconst Signature = TypeFactory.create('signature', [\n  {\n    name: 'pub_key',\n    type: Types.Interface,\n  },\n  {\n    name: 'signature',\n    type: Types.ByteSlice,\n  },\n]);\n\nconst MsgForSign = TypeFactory.create('MsgForSign', [\n  {\n    name: 'chain_id',\n    type: Types.String,\n  },\n  {\n    name: 'account_number',\n    type: Types.String,\n  },\n  {\n    name: 'sequence',\n    type: Types.String,\n  },\n  {\n    name: 'fee',\n    type: Types.Struct,\n  },\n  {\n    name: 'msgs',\n    type: Types.ArrayInterface,\n  },\n  {\n    name: 'memo',\n    type: Types.String,\n  },\n]);\n\nmodule.exports = {\n  Coin,\n  Input,\n  Output,\n  Fee,\n  Signature,\n  StdTx,\n  PubKeySecp256k1,\n  MsgForSign,\n};\n"],"file":"base.js"}