{"version":3,"sources":["../../src/utils/common.js"],"names":["Sha256","require","Secp256k1","RIPEMD160","_","toBN","crypto","bytesToHex","hexToBytes","aminoPrefix","name","a","b","slice","length","marshalBinary","prefix","message","prefixBytes","Buffer","from","concat","getAddress","_publicKey","publicKey","hmac","addr","update","digest","toUpperCase","importPrivateKey","secretKey","secretBytes","pubKey","publicKeyCreate","address","privateKey","sign","msgJson","hash","createHash","JSON","stringify","sortObject","parse","buf","prikeyArr","Uint8Array","signObj","Array","signature","weiToDecimals","_wei","_decimals","wei","decimals","zero","negative1","negative","toString","lt","baseLength","decimalsBN","mul","fraction","mod","match","whole","div","value","trim","obj","isArray","map","sortedKeys","Object","keys","sort","result","forEach","key","module","exports"],"mappings":"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","sourcesContent":["const Sha256 = require('sha256');\nconst Secp256k1 = require('secp256k1');\nconst RIPEMD160 = require('ripemd160');\nconst _ = require('lodash');\nconst toBN = require('number-to-bn');\nconst crypto = require('crypto');\nconst { bytesToHex, hexToBytes } = require('./hex');\n\nfunction aminoPrefix(name) {\n  const a = Sha256(name);\n  let b = hexToBytes(a);\n  while (b[0] === 0) {\n    b = b.slice(1, b.length - 1);\n  }\n  b = b.slice(3, b.length - 1);\n  while (b[0] === 0) {\n    b = b.slice(1, b.length - 1);\n  }\n  b = b.slice(0, 4);\n  return b;\n}\n\nfunction marshalBinary(prefix, message) {\n  let prefixBytes = aminoPrefix(prefix);\n  prefixBytes = Buffer.from(prefixBytes.concat(message.length));\n  prefixBytes = Buffer.concat([prefixBytes, message]);\n  return prefixBytes;\n}\n\nfunction getAddress(_publicKey) {\n  let publicKey = _publicKey;\n  if (publicKey.length > 33) {\n    publicKey = publicKey.slice(5, publicKey.length);\n  }\n  const hmac = Sha256(publicKey);\n  const b = Buffer.from(hexToBytes(hmac));\n  const addr = new RIPEMD160().update(b);\n\n  return addr.digest('hex').toUpperCase();\n}\n\nfunction importPrivateKey(secretKey) {\n  const secretBytes = Buffer.from(secretKey, 'hex');\n  const pubKey = Secp256k1.publicKeyCreate(secretBytes);\n\n  return {\n    address: getAddress(pubKey),\n    privateKey: secretKey,\n    publicKey: bytesToHex(pubKey),\n  };\n}\n\nfunction sign(privateKey, msgJson) {\n  // console.log('cosmos msgJson', JSON.stringify(sortObject(JSON.parse(msgJson))));\n  const hash = crypto\n    .createHash('sha256')\n    .update(JSON.stringify(sortObject(JSON.parse(msgJson))))\n    .digest('hex');\n  const buf = Buffer.from(hash, 'hex');\n  const prikeyArr = Buffer.from(new Uint8Array(hexToBytes(privateKey)));\n  const signObj = Secp256k1.sign(buf, prikeyArr);\n  return Array.from(signObj.signature);\n\n  // Alternative way:\n  // const sigByte = Buffer.from(JSON.stringify(sortObject(JSON.parse(msgJson))));\n  // const sig32 = Buffer.from(Sha256(sigByte, {\n  //   asBytes: true\n  // }));\n  // const prikeyArr = Buffer.from(new Uint8Array(hexToBytes(privateKey)));\n  // const sig = Secp256k1.sign(sig32, prikeyArr);\n  // return Array.from(sig.signature);\n}\n\nfunction weiToDecimals(_wei, _decimals) {\n  let wei = _wei;\n  const decimals = _decimals;\n\n  const zero = toBN(0);\n  const negative1 = toBN(-1);\n\n  const negative = toBN(wei.toString(10), 10).lt(zero); // eslint-disable-line\n  const baseLength = (10 ** decimals).toString().length - 1 || 1;\n  const decimalsBN = toBN((10 ** decimals).toString(10), 10);\n\n  if (negative) {\n    wei = toBN(wei.toString(10), 10).mul(negative1);\n  }\n\n  let fraction = toBN(wei.toString(10), 10)\n    .mod(decimalsBN)\n    .toString(10); // eslint-disable-line\n\n  while (fraction.length < baseLength) {\n    fraction = `0${fraction}`;\n  }\n\n  fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1]; // eslint-disable-line\n\n  const whole = toBN(wei.toString(10), 10)\n    .div(decimalsBN)\n    .toString(10); // eslint-disable-line\n\n  let value = '' + whole + (fraction == '0' ? '' : '.' + fraction); // eslint-disable-line\n\n  if (negative) {\n    value = `-${value}`;\n  }\n\n  return _.trim(value, '.');\n}\n\nfunction sortObject(obj) {\n  if (obj === null) return null;\n  if (typeof obj !== 'object') return obj;\n  if (Array.isArray(obj)) return obj.map(sortObject);\n  const sortedKeys = Object.keys(obj).sort();\n  const result = {};\n  sortedKeys.forEach(key => {\n    result[key] = sortObject(obj[key]);\n  });\n  return result;\n}\n\nmodule.exports = {\n  marshalBinary,\n  hexToBytes,\n  sign,\n  importPrivateKey,\n  weiToDecimals,\n  sortObject,\n};\n"],"file":"common.js"}